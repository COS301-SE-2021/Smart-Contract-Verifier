spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.schema-locations=classpath:schema.sql
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=1GB
spring.servlet.multipart.max-request-size=2GB
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=5

server.port=8080

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.show-sql=false

spring.datasource.url=jdbc:postgresql://localhost:5432/verifierserver
spring.datasource.username=postgres
spring.datasource.password=smartcontractserverdev
spring.sql.init.enabled=true

com.unison.evidence.enabledFilesystem=TEST
com.unison.security.SecretKey=ThisIsATestKeySpecificallyForTests
com.unison.security.timeout= 10800000
com.unison.blockchain.nodeAddress=http://localhost:8545
com.unison.blockchain.contractId= 0xA47929C485B4d6DdF59698C02C0B62f0BbcB2F72
com.unison.blockchain.useblockchain=false

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=drop.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata


#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=drop.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata